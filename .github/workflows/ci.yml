name: Run Tests Simplified

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        ports:
          - 27017:27017

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/common.txt
          pip install -r requirements/local.txt
          pip install pytest-cov

      - name: Wait for MongoDB to be ready
        run: |
          echo "Waiting for MongoDB to start..."
          sleep 30  # Aguarda 30 segundos para o MongoDB estar pronto

      - name: Run pytest with coverage
        env:
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_HOST: 'localhost'
          DATABASE_PORT: 27017
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
        run: pytest --verbose --cov=src --cov-report=xml:coverage.xml

      - name: Adjust coverage paths
        run: sed -i 's|/home/runner/work/ByteBiteBurgersUsers/ByteBiteBurgersUsers/src|src|g' coverage.xml

      - name: List coverage file
        run: ls -la coverage.xml

      - name: Show coverage.xml content
        run: cat coverage.xml

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          args: >
            -Dsonar.projectKey=postech-g38_ByteBiteBurgersUsers
            -Dsonar.organization=postech-g38
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.sources=src
