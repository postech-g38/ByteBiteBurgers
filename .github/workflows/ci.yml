name: Run Tests

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        ports:
          - 5433:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: docker build -t bytebiteburgers .

      - name: Run Docker container
        run: |
          docker network create bytebite_network
          docker run -d --name bytebiteburgers_container --network bytebite_network bytebiteburgers
          sleep 10  # Atraso de 10 segundos para garantir que o contêiner esteja pronto

      - name: Seed database
        run: |
          docker ps  # Verifica se os contêineres estão sendo iniciados corretamente
          docker cp ./seeds/seed.sql $(docker ps -q --filter "ancestor=postgres"):/docker-entrypoint-initdb.d/seed.sql
          sleep 5  # Atraso adicional de 5 segundos para garantir que o contêiner esteja pronto
          docker exec $(docker ps -q --filter "ancestor=postgres") psql -U postgres -d postgres -f /docker-entrypoint-initdb.d/seed.sql

      - name: Print Python version
        run: python --version

      - name: List contents of tests directory
        run: ls -la tests/

      - name: Print current directory
        run: pwd

      - name: Change directory to tests
        run: cd tests/

      - name: Run pytest
        run: docker exec bytebiteburgers_container pytest  # Alteração feita aqui

      - name: Stop Docker container
        run: docker stop bytebiteburgers_container
